<div class="min-h-screen from-orange-50 via-pink-50 to-purple-50 py-8 px-4">
  <div class="max-w-7xl mx-auto">
    <!-- ヘッダー -->
    <div class="bg-white rounded-2xl shadow-lg p-6 mb-8">
      <div class="flex items-center gap-4">
        <div class="w-16 h-16 bg-gradient-to-br from-orange-400 to-pink-500 rounded-full flex items-center justify-center text-white text-2xl font-bold">
          <%= @user.name.first %>
        </div>
        <div>
          <h1 class="text-3xl font-bold text-gray-800"><%= @user.name %>さんのマイページ</h1>
          <p class="text-gray-600 text-sm mt-1"><%= @user.email %></p>
        </div>
      </div>
    </div>

    <!-- タブナビゲーション -->
    <div class="bg-white rounded-2xl shadow-lg overflow-hidden">
      <div class="border-b border-gray-200">
        <nav class="flex">
          <button data-tab="posts" class="tab-button active flex-1 px-6 py-4 text-center font-semibold transition-colors border-b-2 border-orange-500 text-orange-600">
            投稿
            <span class="ml-2 px-2 py-1 bg-orange-100 text-orange-600 rounded-full text-xs"><%= @posts.total_count %></span>
          </button>
          <button data-tab="likes" class="tab-button flex-1 px-6 py-4 text-center font-semibold transition-colors border-b-2 border-transparent text-gray-600 hover:text-orange-600 hover:border-orange-300">
            いいね
            <span class="ml-2 px-2 py-1 bg-gray-100 text-gray-600 rounded-full text-xs"><%= @likes.total_count %></span>
          </button>
        </nav>
      </div>

      <!-- タブコンテンツ -->
      <div class="p-6">
        <!-- 投稿一覧タブ -->
        <div id="posts-tab" class="tab-content">
          <%= render 'posts_tab', posts: @posts %>
        </div>

        <!-- いいね一覧タブ -->
        <div id="likes-tab" class="tab-content hidden">
          <%= render 'likes_tab', likes: @likes %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  function initializeTabs() {
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');

    tabButtons.forEach(button => {
      button.addEventListener('click', function() {
        const tabName = this.getAttribute('data-tab');

        // すべてのタブボタンとコンテンツから active クラスを削除
        tabButtons.forEach(btn => {
          btn.classList.remove('active', 'border-orange-500', 'text-orange-600');
          btn.classList.add('border-transparent', 'text-gray-600');
        });
        tabContents.forEach(content => {
          content.classList.add('hidden');
        });

        // クリックされたタブをアクティブに
        this.classList.add('active', 'border-orange-500', 'text-orange-600');
        this.classList.remove('border-transparent', 'text-gray-600');
        document.getElementById(tabName + '-tab').classList.remove('hidden');
      });
    });
  }

  // 初回読み込み時
  document.addEventListener('DOMContentLoaded', initializeTabs);

  // Turbo によるページ遷移後
  document.addEventListener('turbo:load', initializeTabs);

  // Turbo Frame の読み込み後
  document.addEventListener('turbo:frame-load', initializeTabs);
</script>
